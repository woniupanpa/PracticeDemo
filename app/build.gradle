apply plugin: 'com.android.application'
/************ GreenDao **************/
apply plugin: 'org.greenrobot.greendao'

/************ ButterKnife **************/
/*apply plugin: 'com.jakewharton.butterknife'*/
apply plugin:DateAndTimePlugin
//apply plugin: 'com.yjm.plugin'
apply plugin: "org.gradle.crypto.checksum"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.admin.frameworkdemo"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    greendao{
        schemaVersion 1
        targetGenDir 'src/main/java'
    }
    dataBinding {
        enabled = true
    }

    packagingOptions {
        exclude 'android/databinding/DataBinderMapper.java'
        exclude 'android/databinding/DataBindingComponent.java'
        exclude 'android/databinding/DynamicUtil.java'
        exclude 'META-INF/rxjava.properties'
    }
}



buildscript{
    repositories{
        jcenter()
        maven{
            url uri('../repo')
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies{
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'com.yjm.plugin:test:1.0.0'
        classpath "gradle.plugin.org.gradle.crypto:checksum:1.0.2"
    }
}

allprojects {
    repositories {
        maven {
            // 指定本地仓库路径
            url uri('..repo/')
        }
    }
}

task myTask {
    println "do task"
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    /************ Rxjava **************/
    implementation 'io.reactivex.rxjava2:rxjava:2.0.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    /************ GreenDao **************/
    implementation 'org.greenrobot:greendao:3.0.1'
    implementation 'org.greenrobot:greendao-generator:3.0.0'
    /************ Picasso **************/
    implementation 'com.squareup.picasso:picasso:2.5.2'
    /************ Recycleview **************/
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    /************ NavigationView**************/
    implementation 'com.android.support:design:28.0.0'
    /************ EventBus **************/
    implementation 'de.greenrobot:eventbus:2.4.0'


    /************ ButterKnife **************/
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    /************ LeakCanary **************/
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    /************ Retrofit **************/
    implementation 'com.squareup.okhttp3:okhttp:3.7.0'
    implementation 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    implementation 'com.google.code.gson:gson:2.6.2'

    /************ Glide **************/
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:2.2.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:2.2.0'

    /************ itemBinding **************/
    implementation 'com.android.support:support-v4:27.1.1'

    /************ MVVM Light Toolkit **************/
    implementation 'com.kelin.mvvmlight:library:1.0.0'

    /***************   注解 Annotation     ************/
    implementation 'com.google.auto.service:auto-service:1.0-rc2'

    /***************   Retrofit     ************/
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    /***************   Timber     ************/
    implementation 'com.jakewharton.timber:timber:4.7.1'
}

dateAndTime {
    timeFormat = 'HH:mm:ss.SSS'
    dateFormat = 'MM/dd/yyyy'
}

class DateAndTimePlugin implements Plugin<Project>{
    void apply(Project project) {

        project.extensions.create("dateAndTime", DateAndTimePluginExtension)

        project.task('showTime') << {
            println "Current time is " + new Date().format(project.dateAndTime.timeFormat)
        }

        project.tasks.create('showDate') << {
            println "Current date is " + new Date().format(project.dateAndTime.dateFormat)
        }
    }
}

class DateAndTimePluginExtension {
    String timeFormat = "MM/dd/yyyyHH:mm:ss.SSS"
    String dateFormat = "yyyy-MM-dd"
}
